from measure_of_time import time_of_function

"""
1. На языке Python реализовать алгоритм (функцию) определения четности целого числа,
который будет аналогичен нижеприведенному по функциональности, но отличен по своей сути.
Объяснить плюсы и минусы обеих реализаций.
    Python example:

                def isEven(value):return value%2==0
"""


def my_isEven(value):
    return value & 1


number = int(input('Введите число: '))
if my_isEven(number):
    print("Число нечетное!")
else:
    print("Число четное!")

# Измеряет время выполнения функции в 10.000.000 раз
time_of_function()

"""
    Использовал  побитовое И(&). Суть такой проверки в том, что выясняем, если последний бит у числа 1,
    то число нечетное, если 0 - чётное.
    Работает быстрее, чем def isEven(value):return value%2==0
"""

