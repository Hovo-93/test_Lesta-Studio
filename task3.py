"""
3. На языке Python реализовать функцию, которая быстрее всего (по процессорным тикам) отсортирует
данный ей массив чисел. Массив может быть любого размера со случайным порядком чисел (в том числе и отсортированным).
Объяснить почему вы считаете, что функция соответствует заданным критериям.

"""


def merge_two_list(a, b):
    """
    Функция merge_two_list  должна обьеденить два списка
    """

    c = []
    i = j = 0
    while i < len(a) and j < len(b):
        if a[i] < b[j]:
            c.append(a[i])
            i += 1
        else:
            c.append(b[j])
            j += 1
    if i < len(a):
        c += a[i:]
    if j < len(b):
        c += b[j:]
    return c


def merge_sort(arr):
    """
    Функция merge_sort должна выполнить сортировку.

    """
    if len(arr) == 1:
        return arr
    middle = len(arr) // 2
    left = merge_sort(arr[:middle])
    right = merge_sort(arr[middle:])
    return merge_two_list(left, right)


"""
    Среди алгоритмов, используемых мной (Сортировка Пузырьком,Выбором,Быстрая,Вставками,Cлиянием) самым быстрим
    оказался алгоритм сортировки слиянием  так как время работы в худшем,среднем и лучшем случае равно  nlog n
"""
